{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.html","webpack:///src/app/value/value.component.html","webpack:///src/app/app.component.css","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/value/value.component.css","webpack:///src/app/value/value.component.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","template","AppModule","declarations","imports","providers","bootstrap","ValueComponent","http","getValues","get","subscribe","response","values","error","console","log","environment","production","bootstrapModule","err"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACOf,QAAaC,YAAY,GAAzB;AAAA;;AACE,WAAAC,KAAA,GAAQ,eAAR;AACD,KAFD;;AAAaD,gBAAY,6DALxB,gEAAU;AACTE,cAAQ,EAAE,UADD;AAETC,cAAQ,EAAR;AAAA;AAAA,uFAFS;;;;AAAA,KAAV,CAKwB,GAAZH,YAAY,CAAZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACuBb,QAAaI,SAAS;AAAA;AAAA,KAAtB;;AAAaA,aAAS,6DAhBrB,+DAAS;AACPC,kBAAY,EAAE,CACX,2DADW,EAEX,qEAFW,CADP;AAKPC,aAAO,EAAE,CACN,uEADM,EAEN,qEAFM,EAGN,4FAHM,CALF;AAUPC,eAAS,EAAE,EAVJ;AAYPC,eAAS,EAAE,CACR,2DADQ;AAZJ,KAAT,CAgBqB,GAATJ,SAAS,CAAT;;;;;;;;;;;;;;;;AC9Bb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACQf,QAAaK,cAAc;AAGzB,8BAAoBC,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAAqB;;AAHhB;AAAA;AAAA,mCAKd;AACT,eAAKC,SAAL;AACD;AAPwB;AAAA;AAAA,oCAQhB;AAAA;;AACP,eAAKD,IAAL,CAAUE,GAAV,CAAc,kCAAd,EAAkDC,SAAlD,CAA4D,UAAAC,QAAQ,EAAI;AACtE,iBAAI,CAACC,MAAL,GAAcD,QAAd;AACD,WAFD,EAEG,UAAAE,KAAK,EAAI;AAACC,mBAAO,CAACC,GAAR,CAAYF,KAAZ;AACZ,WAHD;AAID;AAbwB;;AAAA;AAAA,OAA3B;;;;cAG4B;;;;AAHfP,kBAAc,6DAL1B,gEAAU;AACTP,cAAQ,EAAE,WADD;AAETC,cAAQ,EAAR;AAAA;AAAA,+FAFS;;;;AAAA,KAAV,CAK0B,GAAdM,cAAc,CAAd;;;;;;;;;;;;;;;;ACRb;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMU,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,uGAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIL,OAAO,CAACD,KAAR,CAAcM,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"\\n<div >\\n  <h1>Dating App</h1>\\n  <app-value></app-value>\\n</div>\\n\\n\\n\";","export default \"<p *ngFor=\\\"let value of values\\\">\\n  {{value.id}}, {{value.name}}\\n</p>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'DatingApp-SPA';\n}\n","import {\n   BrowserModule,\n   HammerGestureConfig,\n   HAMMER_GESTURE_CONFIG\n } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { ValueComponent } from './value/value.component';\nimport { fromEventPattern } from 'rxjs';\n\n\n@NgModule({\n   declarations: [\n      AppComponent,\n      ValueComponent\n   ],\n   imports: [\n      BrowserModule,\n      HttpClientModule,\n      BrowserAnimationsModule\n   ],\n   providers: [\n   ],\n   bootstrap: [\n      AppComponent\n   ]\n})\nexport class AppModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZhbHVlL3ZhbHVlLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-value',\n  templateUrl: './value.component.html',\n  styleUrls: ['./value.component.css']\n})\nexport class ValueComponent implements OnInit {\n  values: any;\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n    this.getValues();\n  }\n  getValues(){\n    this.http.get('http://localhost:5000/api/values').subscribe(response => {\n      this.values = response;\n    }, error => {console.log(error);\n    });\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}